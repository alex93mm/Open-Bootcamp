"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const filterUsersCSV_1 = global[Symbol.for('ioc.use')]("App/Middlewares/filterUsersCSV");
const csv = require('csv-parser');
const fs = require('fs');
const obtainAllUsers = () => {
    const allUsers = [];
    let lineNumber = 1;
    let totalErrors = 0;
    let totalLineProcesed = 0;
    fs.createReadStream('database/Users.csv')
        .pipe(csv(['email', 'name', 'username']))
        .on('data', (data) => {
        if ((0, filterUsersCSV_1.formatLineCorrect)(data, lineNumber) && !(0, filterUsersCSV_1.emailExists)(allUsers, data, lineNumber)) {
            allUsers.push(data);
            totalLineProcesed++;
        }
        else {
            totalErrors++;
        }
        lineNumber++;
    })
        .on('end', () => {
        console.log("Numero de lineas procesadas correctamente: " + totalLineProcesed);
        console.log("Numero total de errores: " + totalErrors);
    });
    return allUsers;
};
exports.default = obtainAllUsers;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlcnNDU1ZTZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVXNlcnNDU1ZTZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUEseUZBQWdGO0FBSWhGLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQTtBQUNqQyxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7QUFPeEIsTUFBTSxjQUFjLEdBQUcsR0FBRyxFQUFFO0lBRTFCLE1BQU0sUUFBUSxHQUFjLEVBQUUsQ0FBQTtJQUU5QixJQUFJLFVBQVUsR0FBWSxDQUFDLENBQUM7SUFDNUIsSUFBSSxXQUFXLEdBQVksQ0FBQyxDQUFDO0lBQzdCLElBQUksaUJBQWlCLEdBQVksQ0FBQyxDQUFDO0lBR25DLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxvQkFBb0IsQ0FBQztTQUd0QyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO1NBQ3hDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUduQixJQUFHLElBQUEsa0NBQWlCLEVBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBQSw0QkFBVyxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLEVBQUM7WUFFakYsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUVwQixpQkFBaUIsRUFBRSxDQUFDO1NBRXJCO2FBQU07WUFFTCxXQUFXLEVBQUUsQ0FBQTtTQUVkO1FBQ0QsVUFBVSxFQUFFLENBQUE7SUFDZCxDQUFDLENBQUM7U0FHRCxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtRQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsNkNBQTZDLEdBQUcsaUJBQWlCLENBQUMsQ0FBQztRQUMvRSxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixHQUFHLFdBQVcsQ0FBQyxDQUFDO0lBQ3pELENBQUMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxRQUFRLENBQUE7QUFFbkIsQ0FBQyxDQUFBO0FBRUQsa0JBQWUsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLy8gU2VydmljaW8gcXVlIGNvbmVjdGEgbGEgQkJERCBkZSBVc2VycyBjb24gbGEgQVBQXG5cbmltcG9ydCB7IGVtYWlsRXhpc3RzLCBmb3JtYXRMaW5lQ29ycmVjdCB9IGZyb20gXCJBcHAvTWlkZGxld2FyZXMvZmlsdGVyVXNlcnNDU1ZcIjtcblxuLy8gPyBVU08gREUgTEEgTElCUkVSSUEgY3N2LXBhcnNlciBQQVJBIExFRVIgRkFDSUxNRU5URSBFTCBBUkNISVZPIENTVlxuXG5jb25zdCBjc3YgPSByZXF1aXJlKCdjc3YtcGFyc2VyJylcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuXG4vKipcbiAqIE1ldG9kbyBxdWUgb2J0aWVuZSB0b2RvcyBsb3MgdXN1YXJpb3MgZGVsIGFyY2hpdm8gY3N2IGVzcGVjaWZpY2Fkb1xuICogISBObyBzZSBjb250cm9sYSBzaSBlbCBhcmNoaXZvIGV4aXN0ZSBvIG5vXG4gKiBAcmV0dXJucyBPYmplY3RbIFVzZXIgeyBlbWFpbCwgbm9tYnJlIGNvbXBsZXRvLCBub21icmUgdXN1YXJpbyB9XVxuICovXG5jb25zdCBvYnRhaW5BbGxVc2VycyA9ICgpID0+IHtcbiAgLy8gQXJyYXkgZGUgdXN1YXJpb3MgVE9ETzogQW1wbGlhciBhbWJpdG8gcGFyYSB0b2RhIGxhIGFwcFxuICBjb25zdCBhbGxVc2VycyA6IE9iamVjdFtdID0gW11cblxuICBsZXQgbGluZU51bWJlciA6IG51bWJlciA9IDE7XG4gIGxldCB0b3RhbEVycm9ycyA6IG51bWJlciA9IDA7XG4gIGxldCB0b3RhbExpbmVQcm9jZXNlZCA6IG51bWJlciA9IDA7XG5cbiAgLy8gTGVjdHVyYSBkZWwgYXJjaGl2byBjc3ZcbiAgZnMuY3JlYXRlUmVhZFN0cmVhbSgnZGF0YWJhc2UvVXNlcnMuY3N2JylcblxuICAgIC8vIEZvcm1hdGVhbW9zIGVsIGFyY2hpdm8gY3N2IGVzcGVjaWZpY2FuZG8gbG9zIG5vbWJyZXMgZGUgbGFzICdjb2x1bW5hcydcbiAgICAucGlwZShjc3YoWydlbWFpbCcsICduYW1lJywgJ3VzZXJuYW1lJ10pKVxuICAgIC5vbignZGF0YScsIChkYXRhKSA9PiB7XG5cbiAgICAgIC8vIE1ldG9kb3MgZGUgY29udHJvbCBkZSBmb3JtYXRvIHkgZXhpc3RlbmNpYSBkZSBlbWFpbFxuICAgICAgaWYoZm9ybWF0TGluZUNvcnJlY3QoZGF0YSwgbGluZU51bWJlcikgJiYgIWVtYWlsRXhpc3RzKGFsbFVzZXJzLCBkYXRhLCBsaW5lTnVtYmVyKSl7XG5cbiAgICAgICAgYWxsVXNlcnMucHVzaChkYXRhKTtcblxuICAgICAgICB0b3RhbExpbmVQcm9jZXNlZCsrO1xuXG4gICAgICB9IGVsc2Uge1xuXG4gICAgICAgIHRvdGFsRXJyb3JzKytcblxuICAgICAgfVxuICAgICAgbGluZU51bWJlcisrXG4gICAgfSlcblxuICAgIC8vID8gTWV0b2RvIHF1ZSBzZSBlamVjdXRhIGFsIGFjYWJhciAoU2ltaWxhciBhbCBmaW5hbGx5IGVuIHRyeSBjYXRjaClcbiAgICAub24oJ2VuZCcsICgpID0+IHtcbiAgICAgIGNvbnNvbGUubG9nKFwiTnVtZXJvIGRlIGxpbmVhcyBwcm9jZXNhZGFzIGNvcnJlY3RhbWVudGU6IFwiICsgdG90YWxMaW5lUHJvY2VzZWQpO1xuICAgICAgY29uc29sZS5sb2coXCJOdW1lcm8gdG90YWwgZGUgZXJyb3JlczogXCIgKyB0b3RhbEVycm9ycyk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gYWxsVXNlcnNcblxufVxuXG5leHBvcnQgZGVmYXVsdCBvYnRhaW5BbGxVc2VycztcbiJdfQ==