"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const filterUsersCSV_1 = global[Symbol.for('ioc.use')]("App/Middlewares/filterUsersCSV");
const csv = require('csv-parser');
const fs = require('fs');
const obtainAllUsers = () => {
    const allUsers = [];
    let lineNumber = 1;
    let totalErrors = 0;
    let totalLineProcesed = 0;
    fs.createReadStream('database/Users.csv')
        .pipe(csv(['email', 'name', 'username']))
        .on('data', (data) => {
        if ((0, filterUsersCSV_1.formatLineCorrect)(data, lineNumber) && !(0, filterUsersCSV_1.emailExists)(allUsers, data, lineNumber)) {
            allUsers.push(data);
            totalLineProcesed++;
        }
        else {
            totalErrors++;
        }
        lineNumber++;
    })
        .on('end', () => {
        console.log("Numero de lineas procesadas correctamente: " + totalLineProcesed);
        console.log("Numero total de errores: " + totalErrors);
    });
    return allUsers;
};
exports.default = obtainAllUsers;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVXNlcnNDU1ZTZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiVXNlcnNDU1ZTZXJ2aWNlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBQUEseUZBQWdGO0FBRWhGLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxZQUFZLENBQUMsQ0FBQTtBQUNqQyxNQUFNLEVBQUUsR0FBRyxPQUFPLENBQUMsSUFBSSxDQUFDLENBQUE7QUFFeEIsTUFBTSxjQUFjLEdBQUcsR0FBRyxFQUFFO0lBQzFCLE1BQU0sUUFBUSxHQUFjLEVBQUUsQ0FBQTtJQUU5QixJQUFJLFVBQVUsR0FBWSxDQUFDLENBQUM7SUFDNUIsSUFBSSxXQUFXLEdBQVksQ0FBQyxDQUFDO0lBQzdCLElBQUksaUJBQWlCLEdBQVksQ0FBQyxDQUFDO0lBRW5DLEVBQUUsQ0FBQyxnQkFBZ0IsQ0FBQyxvQkFBb0IsQ0FBQztTQUN0QyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTyxFQUFFLE1BQU0sRUFBRSxVQUFVLENBQUMsQ0FBQyxDQUFDO1NBQ3hDLEVBQUUsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJLEVBQUUsRUFBRTtRQUVuQixJQUFHLElBQUEsa0NBQWlCLEVBQUMsSUFBSSxFQUFFLFVBQVUsQ0FBQyxJQUFJLENBQUMsSUFBQSw0QkFBVyxFQUFDLFFBQVEsRUFBRSxJQUFJLEVBQUUsVUFBVSxDQUFDLEVBQUM7WUFFakYsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUVwQixpQkFBaUIsRUFBRSxDQUFDO1NBRXJCO2FBQU07WUFFTCxXQUFXLEVBQUUsQ0FBQTtTQUVkO1FBQ0QsVUFBVSxFQUFFLENBQUE7SUFDZCxDQUFDLENBQUM7U0FDRCxFQUFFLENBQUMsS0FBSyxFQUFFLEdBQUcsRUFBRTtRQUNkLE9BQU8sQ0FBQyxHQUFHLENBQUMsNkNBQTZDLEdBQUcsaUJBQWlCLENBQUMsQ0FBQztRQUMvRSxPQUFPLENBQUMsR0FBRyxDQUFDLDJCQUEyQixHQUFHLFdBQVcsQ0FBQyxDQUFDO0lBQ3pELENBQUMsQ0FBQyxDQUFDO0lBRUgsT0FBTyxRQUFRLENBQUE7QUFFbkIsQ0FBQyxDQUFBO0FBSUQsa0JBQWUsY0FBYyxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgZW1haWxFeGlzdHMsIGZvcm1hdExpbmVDb3JyZWN0IH0gZnJvbSBcIkFwcC9NaWRkbGV3YXJlcy9maWx0ZXJVc2Vyc0NTVlwiO1xuXG5jb25zdCBjc3YgPSByZXF1aXJlKCdjc3YtcGFyc2VyJylcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuXG5jb25zdCBvYnRhaW5BbGxVc2VycyA9ICgpID0+IHtcbiAgY29uc3QgYWxsVXNlcnMgOiBPYmplY3RbXSA9IFtdXG5cbiAgbGV0IGxpbmVOdW1iZXIgOiBudW1iZXIgPSAxO1xuICBsZXQgdG90YWxFcnJvcnMgOiBudW1iZXIgPSAwO1xuICBsZXQgdG90YWxMaW5lUHJvY2VzZWQgOiBudW1iZXIgPSAwO1xuXG4gIGZzLmNyZWF0ZVJlYWRTdHJlYW0oJ2RhdGFiYXNlL1VzZXJzLmNzdicpXG4gICAgLnBpcGUoY3N2KFsnZW1haWwnLCAnbmFtZScsICd1c2VybmFtZSddKSlcbiAgICAub24oJ2RhdGEnLCAoZGF0YSkgPT4ge1xuXG4gICAgICBpZihmb3JtYXRMaW5lQ29ycmVjdChkYXRhLCBsaW5lTnVtYmVyKSAmJiAhZW1haWxFeGlzdHMoYWxsVXNlcnMsIGRhdGEsIGxpbmVOdW1iZXIpKXtcblxuICAgICAgICBhbGxVc2Vycy5wdXNoKGRhdGEpO1xuXG4gICAgICAgIHRvdGFsTGluZVByb2Nlc2VkKys7XG5cbiAgICAgIH0gZWxzZSB7XG5cbiAgICAgICAgdG90YWxFcnJvcnMrK1xuXG4gICAgICB9XG4gICAgICBsaW5lTnVtYmVyKytcbiAgICB9KVxuICAgIC5vbignZW5kJywgKCkgPT4ge1xuICAgICAgY29uc29sZS5sb2coXCJOdW1lcm8gZGUgbGluZWFzIHByb2Nlc2FkYXMgY29ycmVjdGFtZW50ZTogXCIgKyB0b3RhbExpbmVQcm9jZXNlZCk7XG4gICAgICBjb25zb2xlLmxvZyhcIk51bWVybyB0b3RhbCBkZSBlcnJvcmVzOiBcIiArIHRvdGFsRXJyb3JzKTtcbiAgICB9KTtcblxuICAgIHJldHVybiBhbGxVc2Vyc1xuXG59XG5cblxuXG5leHBvcnQgZGVmYXVsdCBvYnRhaW5BbGxVc2VycztcbiJdfQ==